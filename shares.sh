#!/bin/bash

# Constants for digit sums
FIVE=5
SIX=6

digit_sum_5=(5 14 23 32 41 50 59 68 77 86 95 104 113 122 131 140 149 158 167 176 185 194 203 212 221 230 239 248 257 266 275 284 293 302 311 320 329 338 347 356 365 374 383 392 401 410 419 428 437 446 455 464 473 482 491 500 509 518 527 536 545 554 563 572 581 590 599 608 617 626 635 644 653 662 671 680 689 698 707 716 725 734 743 752 761 770 779 788 797 806 815 824 833 842 851 860 869 878 887 896 905 914 923 932 941 950 959 968 977 986 995 1004 1013 1022 1031 1040 1049 1058 1067 1076 1085 1094 1103 1112 1121 1130 1139 1148 1157 1166 1175 1184 1193 1202 1211 1220 1229 1238 1247 1256 1265 1274 1283 1292 1301 1310 1319 1328 1337 1346 1355 1364 1373 1382 1391 1400 1409 1418 1427 1436 1445 1454 1463 1472 1481 1490 1499 1508 1517 1526 1535 1544 1553 1562 1571 1580 1589 1598 1607 1616 1625 1634 1643 1652 1661 1670 1679 1688 1697 1706 1715 1724 1733 1742 1751 1760 1769 1778 1787 1796 1805 1814 1823 1832 1841 1850 1859 1868 1877 1886 1895 1904 1913 1922 1931 1940 1949 1958 1967 1976 1985 1994 2003 2012 2021 2030 2039 2048 2057 2066 2075 2084 2093 2102 2111 2120 2129 2138 2147 2156 2165 2174 2183 2192 2201 2210 2219 2228 2237 2246 2255 2264 2273 2282 2291 2300 2309 2318 2327 2336 2345 2354 2363 2372 2381 2390 2399 2408 2417 2426 2435 2444 2453 2462 2471 2480 2489 2498 2507 2516 2525 2534 2543 2552 2561 2570 2579 2588 2597 2606 2615 2624 2633 2642 2651 2660 2669 2678 2687 2696 2705 2714 2723 2732 2741 2750 2759 2768 2777 2786 2795 2804 2813 2822 2831 2840 2849 2858 2867 2876 2885 2894 2903 2912 2921 2930 2939 2948 2957 2966 2975 2984 2993 3002 3011 3020 3029 3038 3047 3056 3065 3074 3083 3092 3101 3110 3119 3128 3137 3146 3155 3164 3173 3182 3191 3200 3209 3218 3227 3236 3245 3254 3263 3272 3281 3290 3299 3308 3317 3326 3335 3344 3353 3362 3371 3380 3389 3398 3407 3416 3425 3434 3443 3452 3461 3470 3479 3488 3497 3506 3515 3524 3533 3542 3551 3560 3569 3578 3587 3596 3605 3614 3623 3632 3641 3650 3659 3668 3677 3686 3695 3704 3713 3722 3731 3740 3749 3758 3767 3776 3785 3794 3803 3812 3821 3830 3839 3848 3857 3866 3875 3884 3893 3902 3911 3920 3929 3938 3947 3956 3965 3974 3983 3992 4001 4010 4019 4028 4037 4046 4055 4064 4073 4082 4091 4100 4109 4118 4127 4136 4145 4154 4163 4172 4181 4190 4199 4208 4217 4226 4235 4244 4253 4262 4271 4280 4289 4298 4307 4316 4325 4334 4343 4352 4361 4370 4379 4388 4397 4406 4415 4424 4433 4442 4451 4460 4469 4478 4487 4496 4505 4514 4523 4532 4541 4550 4559 4568 4577 4586 4595 4604 4613 4622 4631 4640 4649 4658 4667 4676 4685 4694 4703 4712 4721 4730 4739 4748 4757 4766 4775 4784 4793 4802 4811 4820 4829 4838 4847 4856 4865 4874 4883 4892 4901 4910 4919 4928 4937 4946 4955 4964 4973 4982 4991 5000 5009 5018 5027 5036 5045 5054 5063 5072 5081 5090 5099 5108 5117 5126 5135 5144 5153 5162 5171 5180 5189 5198 5207 5216 5225 5234 5243 5252 5261 5270 5279 5288 5297 5306 5315 5324 5333 5342 5351 5360 5369 5378 5387 5396 5405 5414 5423 5432 5441 5450 5459 5468 5477 5486 5495 5504 5513 5522 5531 5540 5549 5558 5567 5576 5585 5594 5603 5612 5621 5630 5639 5648 5657 5666 5675 5684 5693 5702 5711 5720 5729 5738 5747 5756 5765 5774 5783 5792 5801 5810 5819 5828 5837 5846 5855 5864 5873 5882 5891 5900 5909 5918 5927 5936 5945 5954 5963 5972 5981 5990 5999 6008 6017 6026 6035 6044 6053 6062 6071 6080 6089 6098 6107 6116 6125 6134 6143 6152 6161 6170 6179 6188 6197 6206 6215 6224 6233 6242 6251 6260 6269 6278 6287 6296 6305 6314 6323 6332 6341 6350 6359 6368 6377 6386 6395 6404 6413 6422 6431 6440 6449 6458 6467 6476 6485 6494 6503 6512 6521 6530 6539 6548 6557 6566 6575 6584 6593 6602 6611 6620 6629 6638 6647 6656 6665 6674 6683 6692 6701 6710 6719 6728 6737 6746 6755 6764 6773 6782 6791 6800 6809 6818 6827 6836 6845 6854 6863 6872 6881 6890 6899 6908 6917 6926 6935 6944 6953 6962 6971 6980 6989 6998 7007 7016 7025 7034 7043 7052 7061 7070 7079 7088 7097 7106 7115 7124 7133 7142 7151 7160 7169 7178 7187 7196 7205 7214 7223 7232 7241 7250 7259 7268 7277 7286 7295 7304 7313 7322 7331 7340 7349 7358 7367 7376 7385 7394 7403 7412 7421 7430 7439 7448 7457 7466 7475 7484 7493 7502 7511 7520 7529 7538 7547 7556 7565 7574 7583 7592 7601 7610 7619 7628 7637 7646 7655 7664 7673 7682 7691 7700 7709 7718 7727 7736 7745 7754 7763 7772 7781 7790 7799 7808 7817 7826 7835 7844 7853 7862 7871 7880 7889 7898 7907 7916 7925 7934 7943 7952 7961 7970 7979 7988 7997 8006 8015 8024 8033 8042 8051 8060 8069 8078 8087 8096 8105 8114 8123 8132 8141 8150 8159 8168 8177 8186 8195 8204 8213 8222 8231 8240 8249 8258 8267 8276 8285 8294 8303 8312 8321 8330 8339 8348 8357 8366 8375 8384 8393 8402 8411 8420 8429 8438 8447 8456 8465 8474 8483 8492 8501 8510 8519 8528 8537 8546 8555 8564 8573 8582 8591 8600 8609 8618 8627 8636 8645 8654 8663 8672 8681 8690 8699 8708 8717 8726 8735 8744 8753 8762 8771 8780 8789 8798 8807 8816 8825 8834 8843 8852 8861 8870 8879 8888 8897 8906 8915 8924 8933 8942 8951 8960 8969 8978 8987 8996 9005 9014 9023 9032 9041 9050 9059 9068 9077 9086 9095 9104 9113 9122 9131 9140 9149 9158 9167 9176 9185 9194 9203 9212 9221 9230 9239 9248 9257 9266 9275 9284 9293 9302 9311 9320 9329 9338 9347 9356 9365 9374 9383 9392 9401 9410 9419 9428 9437 9446 9455 9464 9473 9482 9491 9500 9509 9518 9527 9536 9545 9554 9563 9572 9581 9590 9599 9608 9617 9626 9635 9644 9653 9662 9671 9680 9689 9698 9707 9716 9725 9734 9743 9752 9761 9770 9779 9788 9797 9806 9815 9824 9833 9842 9851 9860 9869 9878 9887 9896 9905 9914 9923 9932 9941 9950 9959 9968 9977 9986 9995 10004 10013 10022 10031 10040 10049 10058 10067 10076 10085 10094 10103 10112 10121 10130 10139 10148 10157 10166 10175 10184 10193 10202 10211 10220 10229 10238 10247 10256 10265 10274 10283 10292 10301 10310 10319 10328 10337 10346 10355 10364 10373 10382 10391 10400 10409 10418 10427 10436 10445 10454 10463 10472 10481 10490 10499 10508 10517 10526 10535 10544 10553 10562 10571 10580 10589 10598 10607 10616 10625 10634 10643 10652 10661 10670 10679 10688 10697 10706 10715 10724 10733 10742 10751 10760 10769 10778 10787 10796 10805 10814 10823 10832 10841 10850 10859 10868 10877 10886 10895 10904 10913 10922 10931 10940 10949 10958 10967 10976 10985 10994 11003 11012 11021 11030 11039 11048 11057 11066 11075 11084 11093 11102 11111 11120 11129 11138 11147 11156 11165 11174 11183 11192 11201 11210 11219 11228 11237 11246 11255 11264 11273 11282 11291 11300 11309 11318 11327 11336 11345 11354 11363 11372 11381 11390 11399 11408 11417 11426 11435 11444 11453 11462 11471 11480 11489 11498 11507 11516 11525 11534 11543 11552 11561 11570 11579 11588 11597 11606 11615 11624 11633 11642 11651 11660 11669 11678 11687 11696 11705 11714 11723 11732 11741 11750 11759 11768 11777 11786 11795 11804 11813 11822 11831 11840 11849 11858 11867 11876 11885 11894 11903 11912 11921 11930 11939 11948 11957 11966 11975 11984 11993 12002 12011 12020 12029 12038 12047 12056 12065 12074 12083 12092 12101 12110 12119 12128 12137 12146 12155 12164 12173 12182 12191 12200 12209 12218 12227 12236 12245 12254 12263 12272 12281 12290 12299 12308 12317 12326 12335 12344 12353 12362 12371 12380 12389 12398 12407 12416 12425 12434 12443 12452 12461 12470 12479 12488 12497 12506 12515 12524 12533 12542 12551 12560 12569 12578 12587 12596 12605 12614 12623 12632 12641 12650 12659 12668 12677 12686 12695 12704 12713 12722 12731 12740 12749 12758 12767 12776 12785 12794 12803 12812 12821 12830 12839 12848 12857 12866 12875 12884 12893 12902 12911 12920 12929 12938 12947 12956 12965 12974 12983 12992 13001 13010 13019 13028 13037 13046 13055 13064 13073 13082 13091 13100 13109 13118 13127 13136 13145 13154 13163 13172 13181 13190 13199 13208 13217 13226 13235 13244 13253 13262 13271 13280 13289 13298 13307 13316 13325 13334 13343 13352 13361 13370 13379 13388 13397 13406 13415 13424 13433 13442 13451 13460 13469 13478 13487 13496 13505 13514 13523 13532 13541 13550 13559 13568 13577 13586 13595 13604 13613 13622 13631 13640 13649 13658 13667 13676 13685 13694 13703 13712 13721 13730 13739 13748 13757 13766 13775 13784 13793 13802 13811 13820 13829 13838 13847 13856 13865 13874 13883 13892 13901 13910 13919 13928 13937 13946 13955 13964 13973 13982 13991 14000 14009 14018 14027 14036 14045 14054 14063 14072 14081 14090 14099 14108 14117 14126 14135 14144 14153 14162 14171 14180 14189 14198 14207 14216 14225 14234 14243 14252 14261 14270 14279 14288 14297 14306 14315 14324 14333 14342 14351 14360 14369 14378 14387 14396 14405 14414 14423 14432 14441 14450 14459 14468 14477 14486 14495 14504 14513 14522 14531 14540 14549 14558 14567 14576 14585 14594 14603 14612 14621 14630 14639 14648 14657 14666 14675 14684 14693 14702 14711 14720 14729 14738 14747 14756 14765 14774 14783 14792 14801 14810 14819 14828 14837 14846 14855 14864 14873 14882 14891 14900 14909 14918 14927 14936 14945 14954 14963 14972 14981 14990 14999)
digit_sum_6=(6 15 24 33 42 51 60 69 78 87 96 105 114 123 132 141 150 159 168 177 186 195 204 213 222 231 240 249 258 267 276 285 294 303 312 321 330 339 348 357 366 375 384 393 402 411 420 429 438 447 456 465 474 483 492 501 510 519 528 537 546 555 564 573 582 591 600 609 618 627 636 645 654 663 672 681 690 699 708 717 726 735 744 753 762 771 780 789 798 807 816 825 834 843 852 861 870 879 888 897 906 915 924 933 942 951 960 969 978 987 996 1005 1014 1023 1032 1041 1050 1059 1068 1077 1086 1095 1104 1113 1122 1131 1140 1149 1158 1167 1176 1185 1194 1203 1212 1221 1230 1239 1248 1257 1266 1275 1284 1293 1302 1311 1320 1329 1338 1347 1356 1365 1374 1383 1392 1401 1410 1419 1428 1437 1446 1455 1464 1473 1482 1491 1500 1509 1518 1527 1536 1545 1554 1563 1572 1581 1590 1599 1608 1617 1626 1635 1644 1653 1662 1671 1680 1689 1698 1707 1716 1725 1734 1743 1752 1761 1770 1779 1788 1797 1806 1815 1824 1833 1842 1851 1860 1869 1878 1887 1896 1905 1914 1923 1932 1941 1950 1959 1968 1977 1986 1995 2004 2013 2022 2031 2040 2049 2058 2067 2076 2085 2094 2103 2112 2121 2130 2139 2148 2157 2166 2175 2184 2193 2202 2211 2220 2229 2238 2247 2256 2265 2274 2283 2292 2301 2310 2319 2328 2337 2346 2355 2364 2373 2382 2391 2400 2409 2418 2427 2436 2445 2454 2463 2472 2481 2490 2499 2508 2517 2526 2535 2544 2553 2562 2571 2580 2589 2598 2607 2616 2625 2634 2643 2652 2661 2670 2679 2688 2697 2706 2715 2724 2733 2742 2751 2760 2769 2778 2787 2796 2805 2814 2823 2832 2841 2850 2859 2868 2877 2886 2895 2904 2913 2922 2931 2940 2949 2958 2967 2976 2985 2994 3003 3012 3021 3030 3039 3048 3057 3066 3075 3084 3093 3102 3111 3120 3129 3138 3147 3156 3165 3174 3183 3192 3201 3210 3219 3228 3237 3246 3255 3264 3273 3282 3291 3300 3309 3318 3327 3336 3345 3354 3363 3372 3381 3390 3399 3408 3417 3426 3435 3444 3453 3462 3471 3480 3489 3498 3507 3516 3525 3534 3543 3552 3561 3570 3579 3588 3597 3606 3615 3624 3633 3642 3651 3660 3669 3678 3687 3696 3705 3714 3723 3732 3741 3750 3759 3768 3777 3786 3795 3804 3813 3822 3831 3840 3849 3858 3867 3876 3885 3894 3903 3912 3921 3930 3939 3948 3957 3966 3975 3984 3993 4002 4011 4020 4029 4038 4047 4056 4065 4074 4083 4092 4101 4110 4119 4128 4137 4146 4155 4164 4173 4182 4191 4200 4209 4218 4227 4236 4245 4254 4263 4272 4281 4290 4299 4308 4317 4326 4335 4344 4353 4362 4371 4380 4389 4398 4407 4416 4425 4434 4443 4452 4461 4470 4479 4488 4497 4506 4515 4524 4533 4542 4551 4560 4569 4578 4587 4596 4605 4614 4623 4632 4641 4650 4659 4668 4677 4686 4695 4704 4713 4722 4731 4740 4749 4758 4767 4776 4785 4794 4803 4812 4821 4830 4839 4848 4857 4866 4875 4884 4893 4902 4911 4920 4929 4938 4947 4956 4965 4974 4983 4992 5001 5010 5019 5028 5037 5046 5055 5064 5073 5082 5091 5100 5109 5118 5127 5136 5145 5154 5163 5172 5181 5190 5199 5208 5217 5226 5235 5244 5253 5262 5271 5280 5289 5298 5307 5316 5325 5334 5343 5352 5361 5370 5379 5388 5397 5406 5415 5424 5433 5442 5451 5460 5469 5478 5487 5496 5505 5514 5523 5532 5541 5550 5559 5568 5577 5586 5595 5604 5613 5622 5631 5640 5649 5658 5667 5676 5685 5694 5703 5712 5721 5730 5739 5748 5757 5766 5775 5784 5793 5802 5811 5820 5829 5838 5847 5856 5865 5874 5883 5892 5901 5910 5919 5928 5937 5946 5955 5964 5973 5982 5991 6000 6009 6018 6027 6036 6045 6054 6063 6072 6081 6090 6099 6108 6117 6126 6135 6144 6153 6162 6171 6180 6189 6198 6207 6216 6225 6234 6243 6252 6261 6270 6279 6288 6297 6306 6315 6324 6333 6342 6351 6360 6369 6378 6387 6396 6405 6414 6423 6432 6441 6450 6459 6468 6477 6486 6495 6504 6513 6522 6531 6540 6549 6558 6567 6576 6585 6594 6603 6612 6621 6630 6639 6648 6657 6666 6675 6684 6693 6702 6711 6720 6729 6738 6747 6756 6765 6774 6783 6792 6801 6810 6819 6828 6837 6846 6855 6864 6873 6882 6891 6900 6909 6918 6927 6936 6945 6954 6963 6972 6981 6990 6999 7008 7017 7026 7035 7044 7053 7062 7071 7080 7089 7098 7107 7116 7125 7134 7143 7152 7161 7170 7179 7188 7197 7206 7215 7224 7233 7242 7251 7260 7269 7278 7287 7296 7305 7314 7323 7332 7341 7350 7359 7368 7377 7386 7395 7404 7413 7422 7431 7440 7449 7458 7467 7476 7485 7494 7503 7512 7521 7530 7539 7548 7557 7566 7575 7584 7593 7602 7611 7620 7629 7638 7647 7656 7665 7674 7683 7692 7701 7710 7719 7728 7737 7746 7755 7764 7773 7782 7791 7800 7809 7818 7827 7836 7845 7854 7863 7872 7881 7890 7899 7908 7917 7926 7935 7944 7953 7962 7971 7980 7989 7998 8007 8016 8025 8034 8043 8052 8061 8070 8079 8088 8097 8106 8115 8124 8133 8142 8151 8160 8169 8178 8187 8196 8205 8214 8223 8232 8241 8250 8259 8268 8277 8286 8295 8304 8313 8322 8331 8340 8349 8358 8367 8376 8385 8394 8403 8412 8421 8430 8439 8448 8457 8466 8475 8484 8493 8502 8511 8520 8529 8538 8547 8556 8565 8574 8583 8592 8601 8610 8619 8628 8637 8646 8655 8664 8673 8682 8691 8700 8709 8718 8727 8736 8745 8754 8763 8772 8781 8790 8799 8808 8817 8826 8835 8844 8853 8862 8871 8880 8889 8898 8907 8916 8925 8934 8943 8952 8961 8970 8979 8988 8997 9006 9015 9024 9033 9042 9051 9060 9069 9078 9087 9096 9105 9114 9123 9132 9141 9150 9159 9168 9177 9186 9195 9204 9213 9222 9231 9240 9249 9258 9267 9276 9285 9294 9303 9312 9321 9330 9339 9348 9357 9366 9375 9384 9393 9402 9411 9420 9429 9438 9447 9456 9465 9474 9483 9492 9501 9510 9519 9528 9537 9546 9555 9564 9573 9582 9591 9600 9609 9618 9627 9636 9645 9654 9663 9672 9681 9690 9699 9708 9717 9726 9735 9744 9753 9762 9771 9780 9789 9798 9807 9816 9825 9834 9843 9852 9861 9870 9879 9888 9897 9906 9915 9924 9933 9942 9951 9960 9969 9978 9987 9996 10005 10014 10023 10032 10041 10050 10059 10068 10077 10086 10095 10104 10113 10122 10131 10140 10149 10158 10167 10176 10185 10194 10203 10212 10221 10230 10239 10248 10257 10266 10275 10284 10293 10302 10311 10320 10329 10338 10347 10356 10365 10374 10383 10392 10401 10410 10419 10428 10437 10446 10455 10464 10473 10482 10491 10500 10509 10518 10527 10536 10545 10554 10563 10572 10581 10590 10599 10608 10617 10626 10635 10644 10653 10662 10671 10680 10689 10698 10707 10716 10725 10734 10743 10752 10761 10770 10779 10788 10797 10806 10815 10824 10833 10842 10851 10860 10869 10878 10887 10896 10905 10914 10923 10932 10941 10950 10959 10968 10977 10986 10995 11004 11013 11022 11031 11040 11049 11058 11067 11076 11085 11094 11103 11112 11121 11130 11139 11148 11157 11166 11175 11184 11193 11202 11211 11220 11229 11238 11247 11256 11265 11274 11283 11292 11301 11310 11319 11328 11337 11346 11355 11364 11373 11382 11391 11400 11409 11418 11427 11436 11445 11454 11463 11472 11481 11490 11499 11508 11517 11526 11535 11544 11553 11562 11571 11580 11589 11598 11607 11616 11625 11634 11643 11652 11661 11670 11679 11688 11697 11706 11715 11724 11733 11742 11751 11760 11769 11778 11787 11796 11805 11814 11823 11832 11841 11850 11859 11868 11877 11886 11895 11904 11913 11922 11931 11940 11949 11958 11967 11976 11985 11994 12003 12012 12021 12030 12039 12048 12057 12066 12075 12084 12093 12102 12111 12120 12129 12138 12147 12156 12165 12174 12183 12192 12201 12210 12219 12228 12237 12246 12255 12264 12273 12282 12291 12300 12309 12318 12327 12336 12345 12354 12363 12372 12381 12390 12399 12408 12417 12426 12435 12444 12453 12462 12471 12480 12489 12498 12507 12516 12525 12534 12543 12552 12561 12570 12579 12588 12597 12606 12615 12624 12633 12642 12651 12660 12669 12678 12687 12696 12705 12714 12723 12732 12741 12750 12759 12768 12777 12786 12795 12804 12813 12822 12831 12840 12849 12858 12867 12876 12885 12894 12903 12912 12921 12930 12939 12948 12957 12966 12975 12984 12993 13002 13011 13020 13029 13038 13047 13056 13065 13074 13083 13092 13101 13110 13119 13128 13137 13146 13155 13164 13173 13182 13191 13200 13209 13218 13227 13236 13245 13254 13263 13272 13281 13290 13299 13308 13317 13326 13335 13344 13353 13362 13371 13380 13389 13398 13407 13416 13425 13434 13443 13452 13461 13470 13479 13488 13497 13506 13515 13524 13533 13542 13551 13560 13569 13578 13587 13596 13605 13614 13623 13632 13641 13650 13659 13668 13677 13686 13695 13704 13713 13722 13731 13740 13749 13758 13767 13776 13785 13794 13803 13812 13821 13830 13839 13848 13857 13866 13875 13884 13893 13902 13911 13920 13929 13938 13947 13956 13965 13974 13983 13992 14001 14010 14019 14028 14037 14046 14055 14064 14073 14082 14091 14100 14109 14118 14127 14136 14145 14154 14163 14172 14181 14190 14199 14208 14217 14226 14235 14244 14253 14262 14271 14280 14289 14298 14307 14316 14325 14334 14343 14352 14361 14370 14379 14388 14397 14406 14415 14424 14433 14442 14451 14460 14469 14478 14487 14496 14505 14514 14523 14532 14541 14550 14559 14568 14577 14586 14595 14604 14613 14622 14631 14640 14649 14658 14667 14676 14685 14694 14703 14712 14721 14730 14739 14748 14757 14766 14775 14784 14793 14802 14811 14820 14829 14838 14847 14856 14865 14874 14883 14892 14901 14910 14919 14928 14937 14946 14955 14964 14973 14982 14991 15000)


# Binary search to find the largest number <= max_limit (Floor Search)
binary_search_floor() {
    local share_price=$1
    local arr=("${!2}")  # Correct array dereferencing
    local low=0
    local high=$((${#arr[@]} - 1))
    local result=-1

    while [ $low -le $high ]; do
        mid=$(((low + high) / 2))
        mid_val=${arr[$mid]}
        total_price=$(echo "$mid_val * $share_price" | bc)

        if (( $(echo "$total_price <= $max_limit" | bc -l) )); then
            result=$mid
            low=$((mid + 1))  # Move to higher values
        else
            high=$((mid - 1))  # Move to lower values
        fi
    done

    # If no valid result is found, return 1
    if [ $result -eq -1 ]; then
        echo 1
    else
        echo ${arr[$result]}
    fi
}

# Binary search to find the smallest number > max_limit (Ceil Search)
binary_search_ceil() {
    local share_price=$1
    local arr=("${!2}")  # Correct array dereferencing
    local low=0
    local high=$((${#arr[@]} - 1))
    local result=-1
    local digit_sum_target=$3  # Added to handle return of 5 or 6 for invalid cases

    while [ $low -le $high ]; do
        mid=$(((low + high) / 2))
        mid_val=${arr[$mid]}
        total_price=$(echo "$mid_val * $share_price" | bc)

        if (( $(echo "$total_price > $max_limit" | bc -l) )); then
            result=$mid
            high=$((mid - 1))  # Move to smaller values
        else
            low=$((mid + 1))  # Move to higher values
        fi
    done

    # If no valid result is found, return digit_sum_target directly
    if [ $result -eq -1 ]; then
        echo $digit_sum_target
    else
        echo ${arr[$result]}
    fi
}

find_numbers() {
    digit_sum_target=$1
    max_limit=$2
    share_price=$3
    first_number=0
    second_number=0

    # Select the appropriate array based on the digit sum target
    if [ $digit_sum_target -eq 5 ]; then
        array=("${digit_sum_5[@]}")
    elif [ $digit_sum_target -eq 6 ]; then
        array=("${digit_sum_6[@]}")
    else
        echo "Invalid digit sum target. Only 5 or 6 are allowed."
        return 1
    fi

    # Check if share price exceeds max limit
    if (( $(echo "$share_price > $max_limit" | bc -l) )); then
        first_number=1
        second_number=$digit_sum_target
    else
        # Find the largest valid first number using binary search (floor)
        first_number=$(binary_search_floor $share_price array[@])

        # Find the smallest valid second number using binary search (ceil)
        second_number=$(binary_search_ceil $share_price array[@] $digit_sum_target)
    fi

    # Return the two numbers
    echo "$first_number $second_number"
}

calculate_prices() {
  local qty1=$1
  local qty2=$2
  local share_price=$3

  price1=$(echo "$qty1 * $share_price" | bc)
  price2=$(echo "$qty2 * $share_price" | bc)
  echo "$price1 $price2"
}

show_results() {
  local qty=$1
  local price=$2
  local max_limit=$3

  echo "QTY: $qty, Price: $price"
  if (( $(echo "$price > $max_limit" | bc -l) )); then
    exceeded_amount=$(echo "$price - $max_limit" | bc)
    echo "Exceeded max limit by: $exceeded_amount"
  fi
}

# Main Loop
echo "Welcome to the Share Price Investment Calculator!"

while true; do
  read -p "Enter the share price (with decimals): " share_price
  read -p "Enter the max investment limit (default is 10000): " max_limit
  max_limit=$(echo "${max_limit:-10000}" | tr -d '[:space:]')
  
  if (( $(echo "$share_price > $max_limit" | bc -l) )); then
    qty1=1
    qty3=1
    echo "Share price exceeds max limit. Setting qty1 and qty3 to 1."
  else
    echo -e "\nCalculating quantities and prices...\n"

    echo "The result for digit sum 5 is:"
    result=$(find_numbers $FIVE $max_limit $share_price)
    qty1=$(echo $result | cut -d ' ' -f 1)
    qty2=$(echo $result | cut -d ' ' -f 2)
    read price1 price2 <<< $(calculate_prices $qty1 $qty2 $share_price)
    show_results $qty1 $price1 $max_limit
    show_results $qty2 $price2 $max_limit

    echo -e "\nThe result for digit sum 6 is:"
    result=$(find_numbers $SIX $max_limit $share_price)
    qty3=$(echo $result | cut -d ' ' -f 1)
    qty4=$(echo $result | cut -d ' ' -f 2)
    read price3 price4 <<< $(calculate_prices $qty3 $qty4 $share_price)
    show_results $qty3 $price3 $max_limit
    show_results $qty4 $price4 $max_limit
  fi

  echo -e "\nWould you like to calculate again? (Press 'q' to quit or any other key to continue)"
  read -n 1 choice
  echo ""
  if [ "$choice" == "q" ]; then
    echo "Goodbye!"
    break
  fi
done
